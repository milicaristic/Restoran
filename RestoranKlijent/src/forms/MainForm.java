/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import FormCenovnik.FormNoviCenovnik;
import FormCenovnik.FormPretragaCenovnika;
import FormKonobar.FormDetaljiKonobara;
import FormKonobar.FormNoviKonobar;
import FormKonobar.FormPretragaKonobara;
import controller.ClientController;
import domain.Cenovnik;
import domain.Konobar;
import domain.Proizvod;
import domain.Racun;
import domain.StavkaRacuna;
import domain.Sto;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.TableModelStavkeRacuna;
import session.Session;

/**
 *
 * @author PC
 */
public class MainForm extends javax.swing.JFrame implements Runnable {

    Konobar k;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        setLocationRelativeTo(null);
        this.k = Session.getInstance().getUlogovani();
        lblUlogovani.setText("Ulogovani konobar: " + k.getIme() + " " + k.getPrezime());
        if (k.getKonobarID() != 1) {
            menuItemNoviKonobar.setVisible(false);
            menuItemPretragaKonobara.setVisible(false);
        }
        Thread th = new Thread(this);
        th.start();
        popuniStolove();
        popuniCenovnike();
        txtUkupnaCena.setEnabled(false);
        txtCenaStavke.setEnabled(false);
        txtUkupnaCena.setText("0.00");
        tblStavke.setModel(new TableModelStavkeRacuna());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        lblUlogovani = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblDatumVreme = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbSto = new javax.swing.JComboBox();
        txtUkupnaCena = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnDodajStavku = new javax.swing.JButton();
        btnObrisiStavku = new javax.swing.JButton();
        cmbCenovnik = new javax.swing.JComboBox();
        cmbProizvodi = new javax.swing.JComboBox();
        txtKolicina = new javax.swing.JFormattedTextField();
        txtCenaStavke = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        menuItemNoviKonobar = new javax.swing.JMenuItem();
        menuItemPretragaKonobara = new javax.swing.JMenuItem();
        menuItemMojiDetalji = new javax.swing.JMenuItem();
        menuItemLogout = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        menuItemNoviCenovnik = new javax.swing.JMenuItem();
        menuItemPretragaCenovnika = new javax.swing.JMenuItem();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUlogovani.setText("Ulogovani");

        jLabel1.setText("Datum i vreme:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos racuna"));

        jLabel3.setText("Sto:");

        jLabel4.setText("Ukupna cena:");

        cmbSto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbStoItemStateChanged(evt);
            }
        });

        txtUkupnaCena.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos stavki"));

        jLabel5.setText("Cenovnik:");

        jLabel6.setText("Proizvodi:");

        jLabel7.setText("Kolicina:");

        jLabel8.setText("Cena stavke:");

        btnDodajStavku.setText("Dodaj stavku");
        btnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajStavkuActionPerformed(evt);
            }
        });

        btnObrisiStavku.setText("Obrisi stavku");
        btnObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiStavkuActionPerformed(evt);
            }
        });

        cmbCenovnik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCenovnik.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCenovnikItemStateChanged(evt);
            }
        });

        cmbProizvodi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtKolicina.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtKolicina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKolicinaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKolicinaKeyReleased(evt);
            }
        });

        txtCenaStavke.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavke);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btnObrisiStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDodajStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCenovnik, 0, 355, Short.MAX_VALUE)
                            .addComponent(cmbProizvodi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtKolicina)
                                    .addComponent(txtCenaStavke))
                                .addContainerGap())))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbCenovnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbProizvodi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCenaStavke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajStavku)
                    .addComponent(btnObrisiStavku))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnSacuvaj.setText("Sacuvaj racun");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUkupnaCena)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbSto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUkupnaCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvaj))
        );

        jMenu6.setText("Konobar");

        menuItemNoviKonobar.setText("Novi konobar");
        menuItemNoviKonobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNoviKonobarActionPerformed(evt);
            }
        });
        jMenu6.add(menuItemNoviKonobar);

        menuItemPretragaKonobara.setText("Pretraga konobara");
        menuItemPretragaKonobara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPretragaKonobaraActionPerformed(evt);
            }
        });
        jMenu6.add(menuItemPretragaKonobara);

        menuItemMojiDetalji.setText("Moji detalji");
        menuItemMojiDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemMojiDetaljiActionPerformed(evt);
            }
        });
        jMenu6.add(menuItemMojiDetalji);

        menuItemLogout.setText("Izloguj se");
        menuItemLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemLogoutActionPerformed(evt);
            }
        });
        jMenu6.add(menuItemLogout);

        jMenuBar1.add(jMenu6);

        jMenu7.setText("Cenovnik");

        menuItemNoviCenovnik.setText("Novi cenovnik");
        menuItemNoviCenovnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNoviCenovnikActionPerformed(evt);
            }
        });
        jMenu7.add(menuItemNoviCenovnik);

        menuItemPretragaCenovnika.setText("Pretraga cenovnika");
        menuItemPretragaCenovnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPretragaCenovnikaActionPerformed(evt);
            }
        });
        jMenu7.add(menuItemPretragaCenovnika);

        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUlogovani)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDatumVreme)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUlogovani)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblDatumVreme))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemNoviKonobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNoviKonobarActionPerformed
        if (Session.getInstance().getUlogovani().getKonobarID() == 1) {
            new FormNoviKonobar(this, true).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Samo glavni konobar ima pristup ovoj operaciji!");
        }
    }//GEN-LAST:event_menuItemNoviKonobarActionPerformed

    private void menuItemPretragaKonobaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPretragaKonobaraActionPerformed
        if (Session.getInstance().getUlogovani().getKonobarID() == 1) {
            new FormPretragaKonobara(this, true).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Samo glavni konobar ima pristup ovoj operaciji!");
        }
    }//GEN-LAST:event_menuItemPretragaKonobaraActionPerformed

    private void menuItemNoviCenovnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNoviCenovnikActionPerformed
        new FormNoviCenovnik(this, true).setVisible(true);
    }//GEN-LAST:event_menuItemNoviCenovnikActionPerformed

    private void menuItemPretragaCenovnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPretragaCenovnikaActionPerformed
        new FormPretragaCenovnika(this, true).setVisible(true);
    }//GEN-LAST:event_menuItemPretragaCenovnikaActionPerformed

    private void menuItemMojiDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemMojiDetaljiActionPerformed
        new FormDetaljiKonobara(this, true, k).setVisible(true);
    }//GEN-LAST:event_menuItemMojiDetaljiActionPerformed

    private void menuItemLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemLogoutActionPerformed

        int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                + "se izlogujete?", "Konfirmacija", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            new Login().setVisible(true);
            this.dispose();
        }

    }//GEN-LAST:event_menuItemLogoutActionPerformed

    private void cmbCenovnikItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCenovnikItemStateChanged

        if (cmbCenovnik.getSelectedItem() == null) {
            return;
        }

        try {

            Cenovnik c = (Cenovnik) cmbCenovnik.getSelectedItem();

            ArrayList<Proizvod> proizvodi = ClientController.getInstance().getAllProizvod(c);

            cmbProizvodi.removeAllItems();

            for (Proizvod proizvod : proizvodi) {
                cmbProizvodi.addItem(proizvod);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cmbCenovnikItemStateChanged

    private void txtKolicinaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKolicinaKeyReleased

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {

            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE) {
                txtCenaStavke.setText("");
            }

            Proizvod p = (Proizvod) cmbProizvodi.getSelectedItem();

            int kolicina = Integer.parseInt(txtKolicina.getText());

            if (kolicina <= 0) {
                txtCenaStavke.setText("");
                return;
            }

            txtCenaStavke.setText(String.valueOf(p.getCena() * kolicina));
        }

    }//GEN-LAST:event_txtKolicinaKeyReleased

    private void btnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajStavkuActionPerformed

        if (txtKolicina.getText().isEmpty() || txtCenaStavke.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kolicina mora biti popunjena!");
            return;
        }

        int kolicina = Integer.parseInt(txtKolicina.getText());
        double cenaStavke = Double.parseDouble(txtCenaStavke.getText());
        Cenovnik c = (Cenovnik) cmbCenovnik.getSelectedItem();
        Proizvod p = (Proizvod) cmbProizvodi.getSelectedItem();

        StavkaRacuna sr = new StavkaRacuna(null, -1, kolicina, cenaStavke, c, p);

        TableModelStavkeRacuna tm = (TableModelStavkeRacuna) tblStavke.getModel();
        tm.dodajStavku(sr);

        double ukupnaCena = Double.parseDouble(txtUkupnaCena.getText());

        txtUkupnaCena.setText(String.valueOf(ukupnaCena + sr.getCenaStavke()));

        txtKolicina.setText("");
        txtCenaStavke.setText("");

    }//GEN-LAST:event_btnDodajStavkuActionPerformed

    private void btnObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiStavkuActionPerformed

        int row = tblStavke.getSelectedRow();

        if (row >= 0) {
            TableModelStavkeRacuna tm = (TableModelStavkeRacuna) tblStavke.getModel();

            StavkaRacuna sr = tm.getSelectedStavka(row);

            double ukupnaCena = Double.parseDouble(txtUkupnaCena.getText());

            txtUkupnaCena.setText(String.valueOf(ukupnaCena - sr.getCenaStavke()));

            tm.obrisiStavku(row);
        }

    }//GEN-LAST:event_btnObrisiStavkuActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        try {
            Sto sto = (Sto) cmbSto.getSelectedItem();
            double ukupnaCena = Double.parseDouble(txtUkupnaCena.getText());

            TableModelStavkeRacuna tm = (TableModelStavkeRacuna) tblStavke.getModel();

            Racun r = new Racun(null, new Date(), ukupnaCena, sto, k, tm.getLista());

            ClientController.getInstance().addRacun(r);
            JOptionPane.showMessageDialog(this, "Uspesno dodat racun.");

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void txtKolicinaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKolicinaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKolicinaKeyPressed

    private void cmbStoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbStoItemStateChanged

        if (cmbSto.getSelectedItem() == null) {
            return;
        }

        try {

            Sto s = (Sto) cmbSto.getSelectedItem();

            if (!s.isZaJelo()) {
                popuniCenovnikePice();
            } else {
                popuniCenovnike();
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cmbStoItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajStavku;
    private javax.swing.JButton btnObrisiStavku;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbCenovnik;
    private javax.swing.JComboBox cmbProizvodi;
    private javax.swing.JComboBox cmbSto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatumVreme;
    private javax.swing.JLabel lblUlogovani;
    private javax.swing.JMenuItem menuItemLogout;
    private javax.swing.JMenuItem menuItemMojiDetalji;
    private javax.swing.JMenuItem menuItemNoviCenovnik;
    private javax.swing.JMenuItem menuItemNoviKonobar;
    private javax.swing.JMenuItem menuItemPretragaCenovnika;
    private javax.swing.JMenuItem menuItemPretragaKonobara;
    private javax.swing.JTable tblStavke;
    private javax.swing.JFormattedTextField txtCenaStavke;
    private javax.swing.JFormattedTextField txtKolicina;
    private javax.swing.JFormattedTextField txtUkupnaCena;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true) {
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss dd.MM.yyyy");
            lblDatumVreme.setText(sdf.format(new Date()));
        }
    }

    private void popuniStolove() {
        try {
            ArrayList<Sto> stolovi = ClientController.getInstance().getAllSto();

            cmbSto.removeAllItems();

            for (Sto sto : stolovi) {
                cmbSto.addItem(sto);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniCenovnike() {
        try {
            ArrayList<Cenovnik> cenovnici = ClientController.getInstance().getAllCenovnik();

            cmbCenovnik.removeAllItems();

            for (Cenovnik cenovnik : cenovnici) {
                cmbCenovnik.addItem(cenovnik);
            }

            Cenovnik c = (Cenovnik) cmbCenovnik.getSelectedItem();

            ArrayList<Proizvod> proizvodi = ClientController.getInstance().getAllProizvod(c);

            cmbProizvodi.removeAllItems();

            for (Proizvod proizvod : proizvodi) {
                cmbProizvodi.addItem(proizvod);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void exit() {
        new Login().setVisible(true);
        this.dispose();
    }

    public void refreshCombos() {
        popuniCenovnike();
    }

    private void popuniCenovnikePice() {
        try {
            ArrayList<Cenovnik> cenovnici = ClientController.getInstance().getAllCenovnik();

            cmbCenovnik.removeAllItems();

            for (Cenovnik cenovnik : cenovnici) {
                if (!cenovnik.isHrana()) {
                    cmbCenovnik.addItem(cenovnik);
                }
            }
            
            Cenovnik c = (Cenovnik) cmbCenovnik.getSelectedItem();

            ArrayList<Proizvod> proizvodi = ClientController.getInstance().getAllProizvod(c);

            cmbProizvodi.removeAllItems();

            for (Proizvod proizvod : proizvodi) {
                cmbProizvodi.addItem(proizvod);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
